#! /usr/bin/env python

import genomon_pipeline.run
import genomon_pipeline.stage_task
import argparse

parser = argparse.ArgumentParser(prog = "genomon_pipeline")

parser.add_argument("--version", action = "version", version = "genomon_pipeline-" + genomon_pipeline.__version__)

# --------------
# dna
# --------------

parser_dna = subparsers.add_parser('dna', help='see `add -h`')
parser_dna.add_argument("sample_conf_file", metavar = "sample_conf.csv", default = None, type = str, help = "input sample list flie [csv]")
parser_dna.add_argument("project_root", metavar = "project_root_dir", default = None, type = str, help = "output root directory")
parser_dna.add_argument("genomon_conf_file", help = "config file for genomon pipeline", type = str)
parser_dna.add_argument("--multiprocess", help = "use ruffus multiprocess", default='100', type=int)
parser_exec.add_argument("--param_check", help = "only param check", action='store_true')
parser_dna.set_defaults(handler=genomon_pipeline.run.main)

# --------------
# exec
# --------------

parser_exec = subparsers.add_parser('exec', help='see `add -h`')
parser.add_argument('stage', choices=['bwa', 'mutation', 'sv_parse', 'sv_merge', 'sv_filt'], help = "analysis type")
parser_exec.add_argument("conf", metavar = "sample.conf.yml", type = str, help = "input sample list flie [YAML]")
parser_exec.set_defaults(handler=genomon_pipeline.stage_task.main)

args = parser.parse_args()

args.handler(args)
